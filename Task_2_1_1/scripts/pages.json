[{"name":"abstract fun containsComposite(ints: Collection<Int>): Boolean","description":"io.github.kapkekes.Solution.containsComposite","location":"-task_2_1_1/io.github.kapkekes/-solution/contains-composite.html","searchKeys":["containsComposite","abstract fun containsComposite(ints: Collection<Int>): Boolean","io.github.kapkekes.Solution.containsComposite"]},{"name":"abstract fun initialize(): Sieve","description":"io.github.kapkekes.Sieve.initialize","location":"-task_2_1_1/io.github.kapkekes/-sieve/initialize.html","searchKeys":["initialize","abstract fun initialize(): Sieve","io.github.kapkekes.Sieve.initialize"]},{"name":"abstract fun isPrime(x: Int): Boolean","description":"io.github.kapkekes.Sieve.isPrime","location":"-task_2_1_1/io.github.kapkekes/-sieve/is-prime.html","searchKeys":["isPrime","abstract fun isPrime(x: Int): Boolean","io.github.kapkekes.Sieve.isPrime"]},{"name":"class Consecutive(sieve: Sieve) : Solution","description":"io.github.kapkekes.solutions.Consecutive","location":"-task_2_1_1/io.github.kapkekes.solutions/-consecutive/index.html","searchKeys":["Consecutive","class Consecutive(sieve: Sieve) : Solution","io.github.kapkekes.solutions.Consecutive"]},{"name":"class EratosthenesSieve(upperBound: Int) : Sieve","description":"io.github.kapkekes.sieves.EratosthenesSieve","location":"-task_2_1_1/io.github.kapkekes.sieves/-eratosthenes-sieve/index.html","searchKeys":["EratosthenesSieve","class EratosthenesSieve(upperBound: Int) : Sieve","io.github.kapkekes.sieves.EratosthenesSieve"]},{"name":"class Executor(sieve: Sieve, threadQuantity: Int) : Solution","description":"io.github.kapkekes.solutions.Executor","location":"-task_2_1_1/io.github.kapkekes.solutions/-executor/index.html","searchKeys":["Executor","class Executor(sieve: Sieve, threadQuantity: Int) : Solution","io.github.kapkekes.solutions.Executor"]},{"name":"class ParallelStream(sieve: Sieve) : Solution","description":"io.github.kapkekes.solutions.ParallelStream","location":"-task_2_1_1/io.github.kapkekes.solutions/-parallel-stream/index.html","searchKeys":["ParallelStream","class ParallelStream(sieve: Sieve) : Solution","io.github.kapkekes.solutions.ParallelStream"]},{"name":"class SimpleSieve : Sieve","description":"io.github.kapkekes.sieves.SimpleSieve","location":"-task_2_1_1/io.github.kapkekes.sieves/-simple-sieve/index.html","searchKeys":["SimpleSieve","class SimpleSieve : Sieve","io.github.kapkekes.sieves.SimpleSieve"]},{"name":"class Threading(sieve: Sieve, threadQuantity: Int) : Solution","description":"io.github.kapkekes.solutions.Threading","location":"-task_2_1_1/io.github.kapkekes.solutions/-threading/index.html","searchKeys":["Threading","class Threading(sieve: Sieve, threadQuantity: Int) : Solution","io.github.kapkekes.solutions.Threading"]},{"name":"fun Consecutive(sieve: Sieve)","description":"io.github.kapkekes.solutions.Consecutive.Consecutive","location":"-task_2_1_1/io.github.kapkekes.solutions/-consecutive/-consecutive.html","searchKeys":["Consecutive","fun Consecutive(sieve: Sieve)","io.github.kapkekes.solutions.Consecutive.Consecutive"]},{"name":"fun EratosthenesSieve(upperBound: Int)","description":"io.github.kapkekes.sieves.EratosthenesSieve.EratosthenesSieve","location":"-task_2_1_1/io.github.kapkekes.sieves/-eratosthenes-sieve/-eratosthenes-sieve.html","searchKeys":["EratosthenesSieve","fun EratosthenesSieve(upperBound: Int)","io.github.kapkekes.sieves.EratosthenesSieve.EratosthenesSieve"]},{"name":"fun Executor(sieve: Sieve, threadQuantity: Int)","description":"io.github.kapkekes.solutions.Executor.Executor","location":"-task_2_1_1/io.github.kapkekes.solutions/-executor/-executor.html","searchKeys":["Executor","fun Executor(sieve: Sieve, threadQuantity: Int)","io.github.kapkekes.solutions.Executor.Executor"]},{"name":"fun ParallelStream(sieve: Sieve)","description":"io.github.kapkekes.solutions.ParallelStream.ParallelStream","location":"-task_2_1_1/io.github.kapkekes.solutions/-parallel-stream/-parallel-stream.html","searchKeys":["ParallelStream","fun ParallelStream(sieve: Sieve)","io.github.kapkekes.solutions.ParallelStream.ParallelStream"]},{"name":"fun SimpleSieve()","description":"io.github.kapkekes.sieves.SimpleSieve.SimpleSieve","location":"-task_2_1_1/io.github.kapkekes.sieves/-simple-sieve/-simple-sieve.html","searchKeys":["SimpleSieve","fun SimpleSieve()","io.github.kapkekes.sieves.SimpleSieve.SimpleSieve"]},{"name":"fun Threading(sieve: Sieve, threadQuantity: Int)","description":"io.github.kapkekes.solutions.Threading.Threading","location":"-task_2_1_1/io.github.kapkekes.solutions/-threading/-threading.html","searchKeys":["Threading","fun Threading(sieve: Sieve, threadQuantity: Int)","io.github.kapkekes.solutions.Threading.Threading"]},{"name":"interface Sieve","description":"io.github.kapkekes.Sieve","location":"-task_2_1_1/io.github.kapkekes/-sieve/index.html","searchKeys":["Sieve","interface Sieve","io.github.kapkekes.Sieve"]},{"name":"interface Solution","description":"io.github.kapkekes.Solution","location":"-task_2_1_1/io.github.kapkekes/-solution/index.html","searchKeys":["Solution","interface Solution","io.github.kapkekes.Solution"]},{"name":"open override fun containsComposite(ints: Collection<Int>): Boolean","description":"io.github.kapkekes.solutions.Consecutive.containsComposite","location":"-task_2_1_1/io.github.kapkekes.solutions/-consecutive/contains-composite.html","searchKeys":["containsComposite","open override fun containsComposite(ints: Collection<Int>): Boolean","io.github.kapkekes.solutions.Consecutive.containsComposite"]},{"name":"open override fun containsComposite(ints: Collection<Int>): Boolean","description":"io.github.kapkekes.solutions.Executor.containsComposite","location":"-task_2_1_1/io.github.kapkekes.solutions/-executor/contains-composite.html","searchKeys":["containsComposite","open override fun containsComposite(ints: Collection<Int>): Boolean","io.github.kapkekes.solutions.Executor.containsComposite"]},{"name":"open override fun containsComposite(ints: Collection<Int>): Boolean","description":"io.github.kapkekes.solutions.ParallelStream.containsComposite","location":"-task_2_1_1/io.github.kapkekes.solutions/-parallel-stream/contains-composite.html","searchKeys":["containsComposite","open override fun containsComposite(ints: Collection<Int>): Boolean","io.github.kapkekes.solutions.ParallelStream.containsComposite"]},{"name":"open override fun containsComposite(ints: Collection<Int>): Boolean","description":"io.github.kapkekes.solutions.Threading.containsComposite","location":"-task_2_1_1/io.github.kapkekes.solutions/-threading/contains-composite.html","searchKeys":["containsComposite","open override fun containsComposite(ints: Collection<Int>): Boolean","io.github.kapkekes.solutions.Threading.containsComposite"]},{"name":"open override fun initialize(): EratosthenesSieve","description":"io.github.kapkekes.sieves.EratosthenesSieve.initialize","location":"-task_2_1_1/io.github.kapkekes.sieves/-eratosthenes-sieve/initialize.html","searchKeys":["initialize","open override fun initialize(): EratosthenesSieve","io.github.kapkekes.sieves.EratosthenesSieve.initialize"]},{"name":"open override fun initialize(): SimpleSieve","description":"io.github.kapkekes.sieves.SimpleSieve.initialize","location":"-task_2_1_1/io.github.kapkekes.sieves/-simple-sieve/initialize.html","searchKeys":["initialize","open override fun initialize(): SimpleSieve","io.github.kapkekes.sieves.SimpleSieve.initialize"]},{"name":"open override fun isPrime(x: Int): Boolean","description":"io.github.kapkekes.sieves.EratosthenesSieve.isPrime","location":"-task_2_1_1/io.github.kapkekes.sieves/-eratosthenes-sieve/is-prime.html","searchKeys":["isPrime","open override fun isPrime(x: Int): Boolean","io.github.kapkekes.sieves.EratosthenesSieve.isPrime"]},{"name":"open override fun isPrime(x: Int): Boolean","description":"io.github.kapkekes.sieves.SimpleSieve.isPrime","location":"-task_2_1_1/io.github.kapkekes.sieves/-simple-sieve/is-prime.html","searchKeys":["isPrime","open override fun isPrime(x: Int): Boolean","io.github.kapkekes.sieves.SimpleSieve.isPrime"]}]
